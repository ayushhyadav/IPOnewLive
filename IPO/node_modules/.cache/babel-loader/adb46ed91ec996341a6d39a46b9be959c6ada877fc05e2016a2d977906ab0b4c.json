{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/package(1)/src/Components/Fileupload/Fileupload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from \"xlsx\";\nimport \"./Fileupload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fileupload() {\n  _s();\n  const [excelfile, setexcelfile] = useState(null);\n  const [typeerror, settypeerror] = useState(null);\n  const [exceldata, setexceldata] = useState(null);\n  const handlefile = e => {\n    let filetypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];\n    let selectedfile = e.target.files[0];\n    if (selectedfile) {\n      if (selectedfile && filetypes.includes(selectedfile.type)) {\n        settypeerror(null);\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(selectedfile);\n        reader.onload = e => {\n          setexcelfile(e.target.result);\n        };\n        console.log(selectedfile.type);\n      } else {\n        settypeerror(\"please select only excel file type\");\n        setexcelfile(null);\n      }\n    } else {\n      console.log(\"please select your file\");\n    }\n  };\n  const handlefilesubmit = e => {\n    e.preventDefault();\n    if (excelfile !== null) {\n      const workbook = XLSX.read(excelfile, {\n        type: 'buffer'\n      });\n      const worksheetname = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[worksheetname];\n      const data = XLSX.utils.sheet_to_json(worksheet);\n      setexceldata(data.slice(0, 10));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"excel-head\",\n      children: \"Upload Excel Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group custom-form\",\n      action: \"\",\n      onSubmit: handlefilesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"\",\n        className: \"form-control\",\n        required: true,\n        onChange: handlefile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-nd\",\n        children: \"UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), typeerror && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: typeerror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer\",\n      children: exceldata ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(exceldata[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: exceldata.map((individualexceldata, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(individualexceldata).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: individualexceldata[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-secondary\",\n        children: \"File not uploaded yet!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(Fileupload, \"V0OTzRte5/7vyACfM8kJgMR/xCY=\");\n_c = Fileupload;\nexport default Fileupload;\nvar _c;\n$RefreshReg$(_c, \"Fileupload\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","Fileupload","_s","excelfile","setexcelfile","typeerror","settypeerror","exceldata","setexceldata","handlefile","e","filetypes","selectedfile","target","files","includes","type","reader","FileReader","readAsArrayBuffer","onload","result","console","log","handlefilesubmit","preventDefault","workbook","read","worksheetname","SheetNames","worksheet","Sheets","data","utils","sheet_to_json","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","name","required","onChange","role","Object","keys","map","key","individualexceldata","index","_c","$RefreshReg$"],"sources":["/home/hp/Desktop/package(1)/src/Components/Fileupload/Fileupload.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport * as XLSX from \"xlsx\"\r\nimport \"./Fileupload.css\"\r\nfunction Fileupload() {\r\n         const [excelfile,setexcelfile]=useState(null)\r\n         const [typeerror,settypeerror]=useState(null)\r\n\r\n         const [exceldata,setexceldata]=useState(null)\r\n\r\n   const handlefile=(e)=>{\r\n    let filetypes=['application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','text/csv']\r\n    let selectedfile=e.target.files[0]\r\n    if(selectedfile){\r\n      if(selectedfile&&filetypes.includes(selectedfile.type)){\r\n       settypeerror(null)\r\n       let reader= new FileReader()\r\n       reader.readAsArrayBuffer(selectedfile)\r\n       reader.onload=(e)=>{\r\n        setexcelfile(e.target.result)\r\n       }\r\n    console.log(selectedfile.type)\r\n      }\r\n      else{\r\n        settypeerror(\"please select only excel file type\")\r\n        setexcelfile(null)\r\n     }\r\n    }else{\r\n        console.log(\"please select your file\")\r\n    }\r\n    \r\n   }\r\n   const handlefilesubmit=(e)=>{\r\n     e.preventDefault()\r\n     if(excelfile!==null){\r\n        const workbook=XLSX.read(excelfile,{type: 'buffer'})\r\n        const worksheetname=workbook.SheetNames[0]\r\n        const worksheet= workbook.Sheets[worksheetname]\r\n        const data= XLSX.utils.sheet_to_json(worksheet)\r\n        setexceldata(data.slice(0,10))\r\n     }\r\n   }\r\n    return (\r\n        \r\n      <div className='wrapper'>\r\n          <h3 className='excel-head'>Upload Excel Sheet</h3>\r\n          <form className='form-group custom-form' action=\"\" onSubmit={handlefilesubmit}>\r\n            <input type=\"file\" name=\"\" className=\"form-control\" required onChange={handlefile} />\r\n            <button type='submit' className='btn btn-success btn-nd'>UPLOAD</button>\r\n            {typeerror&&(\r\n                <div className='alert alert-danger' role='alert'>{typeerror}</div>\r\n            )}\r\n          </form>\r\n          <div className=\"viewer\">\r\n            {exceldata?(<div className='table-responsive'>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.keys(exceldata[0]).map((key)=>(\r\n                            <th key={key}>{key}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {exceldata.map((individualexceldata,index)=>(\r\n                          <tr key={index}>\r\n                            {Object.keys(individualexceldata).map((key)=>(\r\n                                <td key={key}>{individualexceldata[key]}</td>\r\n                            ))}\r\n                          </tr>  \r\n                          \r\n                        ))}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>):(<div className='alert alert-secondary'>File not uploaded yet!!!</div>)}\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default Fileupload\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,IAAI,CAAC;EAE7C,MAAM,CAACU,SAAS,EAACC,YAAY,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAEnD,MAAMY,UAAU,GAAEC,CAAC,IAAG;IACrB,IAAIC,SAAS,GAAC,CAAC,0BAA0B,EAAC,mEAAmE,EAAC,UAAU,CAAC;IACzH,IAAIC,YAAY,GAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAGF,YAAY,EAAC;MACd,IAAGA,YAAY,IAAED,SAAS,CAACI,QAAQ,CAACH,YAAY,CAACI,IAAI,CAAC,EAAC;QACtDV,YAAY,CAAC,IAAI,CAAC;QAClB,IAAIW,MAAM,GAAE,IAAIC,UAAU,CAAC,CAAC;QAC5BD,MAAM,CAACE,iBAAiB,CAACP,YAAY,CAAC;QACtCK,MAAM,CAACG,MAAM,GAAEV,CAAC,IAAG;UAClBN,YAAY,CAACM,CAAC,CAACG,MAAM,CAACQ,MAAM,CAAC;QAC9B,CAAC;QACJC,OAAO,CAACC,GAAG,CAACX,YAAY,CAACI,IAAI,CAAC;MAC5B,CAAC,MACG;QACFV,YAAY,CAAC,oCAAoC,CAAC;QAClDF,YAAY,CAAC,IAAI,CAAC;MACrB;IACD,CAAC,MAAI;MACDkB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C;EAED,CAAC;EACD,MAAMC,gBAAgB,GAAEd,CAAC,IAAG;IAC1BA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClB,IAAGtB,SAAS,KAAG,IAAI,EAAC;MACjB,MAAMuB,QAAQ,GAAC5B,IAAI,CAAC6B,IAAI,CAACxB,SAAS,EAAC;QAACa,IAAI,EAAE;MAAQ,CAAC,CAAC;MACpD,MAAMY,aAAa,GAACF,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC;MAC1C,MAAMC,SAAS,GAAEJ,QAAQ,CAACK,MAAM,CAACH,aAAa,CAAC;MAC/C,MAAMI,IAAI,GAAElC,IAAI,CAACmC,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;MAC/CtB,YAAY,CAACwB,IAAI,CAACG,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;IACjC;EACF,CAAC;EACA,oBAEEnC,OAAA;IAAKoC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBrC,OAAA;MAAIoC,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDzC,OAAA;MAAMoC,SAAS,EAAC,wBAAwB;MAACM,MAAM,EAAC,EAAE;MAACC,QAAQ,EAAEnB,gBAAiB;MAAAa,QAAA,gBAC5ErC,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAAC4B,IAAI,EAAC,EAAE;QAACR,SAAS,EAAC,cAAc;QAACS,QAAQ;QAACC,QAAQ,EAAErC;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrFzC,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAACoB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvEpC,SAAS,iBACNL,OAAA;QAAKoC,SAAS,EAAC,oBAAoB;QAACW,IAAI,EAAC,OAAO;QAAAV,QAAA,EAAEhC;MAAS;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACpE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPzC,OAAA;MAAKoC,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB9B,SAAS,gBAAEP,OAAA;QAAKoC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eACzCrC,OAAA;UAAOoC,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBrC,OAAA;YAAAqC,QAAA,eACIrC,OAAA;cAAAqC,QAAA,EACKW,MAAM,CAACC,IAAI,CAAC1C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC2C,GAAG,CAAEC,GAAG,iBACnCnD,OAAA;gBAAAqC,QAAA,EAAec;cAAG,GAATA,GAAG;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CACtB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRzC,OAAA;YAAAqC,QAAA,EACK9B,SAAS,CAAC2C,GAAG,CAAC,CAACE,mBAAmB,EAACC,KAAK,kBACvCrD,OAAA;cAAAqC,QAAA,EACGW,MAAM,CAACC,IAAI,CAACG,mBAAmB,CAAC,CAACF,GAAG,CAAEC,GAAG,iBACtCnD,OAAA;gBAAAqC,QAAA,EAAee,mBAAmB,CAACD,GAAG;cAAC,GAA9BA,GAAG;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgC,CAC/C;YAAC,GAHKY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CAEL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,gBAAGzC,OAAA;QAAKoC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACvC,EAAA,CA3EMD,UAAU;AAAAqD,EAAA,GAAVrD,UAAU;AA8EnB,eAAeA,UAAU;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}